spring:
  security:
    oauth2:
      client:
        registration:
          god-auth:
            provider: god
            client-id: god-client
            client-secret: secret
#            http://127.0.0.1:8080/oauth2/authorization/god-auth
#todo        redirect-uri:  '{baseUrl}/foo/bar' 错误的写法  根据oauth2协议localhost不可被解析
#            redirect-uri:  '{baseUrl}/login/oauth2/code/{registrationId}'
            redirect-uri:  'http://127.0.0.1:8080/foo/bar'
            authorization-grant-type: authorization_code
            client-authentication-method: client_secret_basic
            scope: message.read,message.write
          god-oidc:
            provider: god
            client-id: god-client
            client-secret: secret
            #            http://127.0.0.1:8080/oauth2/authorization/god-oidc
            #todo        redirect-uri:  '{baseUrl}/foo/bar' 错误的写法  根据oauth2协议localhost不可被解析
            redirect-uri:  'http://127.0.0.1:8080/login/oauth2/code/{registrationId}'
            authorization-grant-type: authorization_code
            scope: openid
        provider:
          god:
#todo       provider 尽量用域名  不要用localhost或者IP  而且要和well-known接口中保持一致
            issuer-uri: http://localhost:9000
#           issuer-uri 可以简化下面的配置
#            authorization-uri: http://localhost:9000/oauth2/authorize
#            token-uri: http://localhost:9000/oauth2/token
#            user-info-uri: http://your-userinfo-endpoiont
#            user-name-attribute: username
#            user-info-authentication-method: GET

# 方便调试
logging:
  level:
    org.springframework.web: trace
    org.springframework.security: debug
    org.springframework.security.oauth2: debug